// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Curry from "bs-platform/lib/es6/curry.js";
import * as React from "react";
import * as Belt_Array from "bs-platform/lib/es6/belt_Array.js";
import * as ReactFela from "react-fela";
import * as Json_decode from "@glennsl/bs-json/src/Json_decode.bs.js";
import * as Grid$FunctionalVite from "./components/Grid.bs.js";
import * as DogImage$FunctionalVite from "./components/DogImage.bs.js";
import * as ReasonReactErrorBoundary from "reason-react/src/ReasonReactErrorBoundary.bs.js";
import * as AppRenderer$FunctionalVite from "./components/AppRenderer.bs.js";

function dogResponse(data) {
  return {
          message: Json_decode.field("message", (function (param) {
                  return Json_decode.array(Json_decode.string, param);
                }), data),
          status: Json_decode.field("status", Json_decode.string, data)
        };
}

var Decode = {
  dogResponse: dogResponse
};

function App(Props) {
  var match = React.useReducer((function (state, action) {
          if (action.TAG === /* SetDogsData */0) {
            return {
                    searchTerm: state.searchTerm,
                    dogsData: action._0
                  };
          } else {
            return {
                    searchTerm: action._0,
                    dogsData: state.dogsData
                  };
          }
        }), {
        searchTerm: "",
        dogsData: []
      });
  var dispatch = match[1];
  var state = match[0];
  React.useEffect((function () {
          fetch("https://dog.ceo/api/breeds/image/random/15").then(function (prim) {
                  return prim.json();
                }).then(function (json) {
                var dogsData = dogResponse(json);
                Curry._1(dispatch, {
                      TAG: /* SetDogsData */0,
                      _0: dogsData.message
                    });
                return Promise.resolve(dogsData);
              });
          
        }), []);
  return React.createElement(ReactFela.RendererProvider, {
              renderer: AppRenderer$FunctionalVite.renderer,
              children: React.createElement(ReasonReactErrorBoundary.make, {
                    children: React.createElement("div", undefined, React.createElement("h1", undefined, "This is a counter"), React.createElement("input", {
                              value: state.searchTerm,
                              onChange: (function ($$event) {
                                  var value = $$event.target.value;
                                  return Curry._1(dispatch, {
                                              TAG: /* SetSearchTerm */1,
                                              _0: value
                                            });
                                })
                            }), React.createElement(Grid$FunctionalVite.make, {
                              children: Belt_Array.map(state.dogsData, (function (imageUrl) {
                                      return React.createElement(DogImage$FunctionalVite.make, {
                                                  imageUrl: imageUrl,
                                                  key: imageUrl
                                                });
                                    }))
                            })),
                    fallback: (function (param) {
                        return "Something went wrong";
                      })
                  })
            });
}

var make = App;

export {
  Decode ,
  make ,
  
}
/* react Not a pure module */
